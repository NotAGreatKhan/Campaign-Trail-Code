function removeCandidateSummary() {
try {
  const candidateSummary = document.querySelector("#candidate_summary");
  if (candidateSummary) {
    const ulList = candidateSummary.querySelector("ul");
    if (ulList) {
      candidateSummary.removeChild(ulList);
    }
  }
} catch {}
}
window.setInterval(removeCandidateSummary,300)

function updateCandidateForm() {
  formobserver.disconnect();
  const heading = document.querySelector("#candidate_form form h3");

  if (heading) {
    heading.textContent = "Please select your party:";
  }
  formobserver.observe(document.documentElement, { childList: true, subtree: true });
}

var formobserver = new MutationObserver(updateCandidateForm);
formobserver.observe(document.documentElement, { childList: true, subtree: true });

function removeRunningMateSummary() {
try {
  const running_mateSummary = document.querySelector("#running_mate_summary");
  if (running_mateSummary) {
    const ulList = running_mateSummary.querySelector("ul");
    if (ulList) {
      running_mateSummary.removeChild(ulList);
    }
  }
} catch {}
}
window.setInterval(removeCandidateSummary,300)

function updateRunningMateForm() {
  runformobserver.disconnect();
  const heading = document.querySelector("#running_mate_form form h3");

  if (heading) {
    heading.textContent = "Please select your party leader:";
  }
  runformobserver.observe(document.documentElement, { childList: true, subtree: true });
}

var runformobserver = new MutationObserver(updateRunningMateForm);
runformobserver.observe(document.documentElement, { childList: true, subtree: true });

function removeCandidateSummary() {
   sumobserver.disconnect();
  const candidateSummary = document.querySelector("#candidate_summary");
  if (candidateSummary) {
    const ulList = candidateSummary.querySelector("ul");
    if (ulList) {
      candidateSummary.removeChild(ulList);
    }
  }
  sumobserver.observe(document.body, {childList: true,subtree: true});
}

var sumobserver = new MutationObserver(removeRunningMateSummary);
sumobserver.observe(document.body, {childList: true,subtree: true});

function removeRunningMateSummary() {
   sumobserver.disconnect();
  const running_mateSummary = document.querySelector("#running_mate_summary");
  if (running_mateSummary) {
    const ulList = running_mateSummary.querySelector("ul");
    if (ulList) {
      running_mateSummary.removeChild(ulList);
    }
  }
  sumobserver.observe(document.body, {childList: true,subtree: true});
}

var sumobserver = new MutationObserver(removeRunningMateSummary);
sumobserver.observe(document.body, {childList: true,subtree: true});

function updateHeader() {
  var gameHeader = document.getElementsByClassName("game_header")[0];

  if (gameHeader.getAttribute("id") !== "modifiedHeader") {
    gameHeader.innerHTML = corrr;
    gameHeader.style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_title;
    gameHeader.setAttribute("id", "modifiedHeader");
  }
}
window.setInterval(removeRunningMateSummary,304)
  
let z = new MutationObserver((mutationsList, observer) => {
    let runningmateSummary = document.querySelector("#runningmate_summary");
    if (runningmateSummary && runningmateSummary.children[0].children[2].innerHTML != runningmateSummary.children[0].children[2].innerHTML.replaceAll("Home State", "Constituency")) {
        runningmateSummary.children[0].children[2].innerHTML = runningmateSummary.children[0].children[2].innerHTML.replaceAll("Home State", "Constituency");
    }
});
var headerobserver = new MutationObserver(updateHeader);
headerobserver.observe(document.documentElement, { childList: true, subtree: true });

RecReading=true

campaignTrail_temp.election_json = [
    {
        "model": "campaign_trail.election",
        "pk": 21,
        "fields": {
            "year": 2020,
            "summary": "<div style='overflow-y:scroll;height:200px;'><p>For 14 arduous years, the pint-sized gremlins that make up the Tory Party ruled over Britain under their slimy mandibles. Their 'leaders' eroding away the very constitutions and conventions that make this country great. Their policies destroying the economic and social fabric of this nation.</p><p>And yet, in spite of all of the pain under austerity, in spite of the unbridled incompetency of the orphaned Tory quintuplet, the landslide victory of the Labour Party under Free Gear Kier was an ocean across and skin-deep. Now, a Tory-lite with a stiff disposition and managerial coldness, is at the helm of the sinking ship. An amoral technocrat who would rather listen to the Blairites who fund him, than the people who elected him in the first place. The Prime Minister of a United Kingdom, long past its hay-day.</p><p>If Kier Starmer wants to keep his anti-Tory coalition from shattering to a million pieces, he'll need to navigate through scandal, crisis, and opposition all simultaneously. Lest he falls into the very same twilight of the British state.</p></div>",
            "image_url": "",
            "winning_electoral_vote_number": 326,
            "advisor_url": "https://imgur.com/0YCw5hi.jpg",
            "recommended_reading": "'",
            "has_visits": 1,
            "no_electoral_majority_image": "https://www.jetsimon.com/public/static/images/2012-no-majority.jpg",
            "creator": "Dan Bryan",
            "display_year": "2024 - Starmergeddon"
        }
    }
]

campaignTrail_temp.candidate_json = [
    {
        "model": "campaign_trail.candidate",
        "pk": 300,
        "fields": {
            "first_name": "The",
            "last_name": "Labour Party",
            "election": 21,
            "party": "Labour",
            "state": "--",
            "priority": 1,
            "description": "<p><b>The Labour Party</b> is the major centre-left party of the UK, founded by a group of trade union socialists and middle-class intellectuals in the mid 1920's.</p>",
            "color_hex": "#0000FF",
            "secondary_color_hex": "#90C0FF",
            "is_active": 1,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 304,
        "fields": {
            "first_name": "Kier R.",
            "last_name": "Starmer",
            "election": 21,
            "party": "Labour",
            "state": "Holborn and St. Pancras",
            "priority": 5,
            "description": "'",
            "color_hex": "#0000FF",
            "secondary_color_hex": "#90C0FF",
            "is_active": 0,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "<li><b>Name: Kier R. Starmer</b></li><li><b>Role: Prime Minister</b></li><li><b>Constituency: Holborn St. Pancras</b></li><p> </p><p><b>Sir Kier Rodney Starmer</b> is the current Prime Minister of the United Kingdom.</p>",
            "candidate_score": 0,
            "running_mate": true
        }
    }
]

campaignTrail_temp.running_mate_json = [
    {
        "model": "campaign_trail.running_mate",
        "pk": 200,
        "fields": {
            "candidate": 300,
            "running_mate": 304
        }
    }
]

campaignTrail_temp.credits = "<button onclick='credits()'>Credits</button>"

credits = function() {
  credits = ["[Lead Development]", "By: u/No-Reading9991", "", "[And A Huge Thanks...]", "To you: The Campaign Trail Community who inspired me in the first place!"]
  text = "[CREDITS]:\n\n"
  for (i in credits) {
      text += credits[i] + "\n"
  }
  alert(text)
}

campaignTrail_temp.global_parameter_json = [
    {
        "model": "campaign_trail.global_parameter",
        "pk": 1,
        "fields": {
            "vote_variable": 1.125,
            "max_swing": 0.12,
            "start_point": 0.94,
            "candidate_issue_weight": 10,
            "running_mate_issue_weight": 3,
            "issue_stance_1_max": -0.71,
            "issue_stance_2_max": -0.3,
            "issue_stance_3_max": -0.125,
            "issue_stance_4_max": 0.125,
            "issue_stance_5_max": 0.3,
            "issue_stance_6_max": 0.71,
            "global_variance": 0.01,
            "state_variance": 0.005,
            "question_count": 35,
            "default_map_color_hex": "#C9C9C9",
            "no_state_map_color_hex": "#999999"
        }
    }
]

campaignTrail_temp.opponents_default_json = [
    {
        "election": 21,
        "candidates": [
            300
        ]
    }
]

campaignTrail_temp.opponents_weighted_json = [
    {
        "election": 21,
        "candidates": [
            300
        ]
    }
]

campaignTrail_temp.temp_election_list = [
    {
        "id": 21,
        "year": 2020,
        "is_premium": 0,
        "display_year": "2024 - Starmergeddon"
    }
]

jet_data = {
    "headerColor": "#e4003b",
    "windowColor": "#fffafb",
    "containerColor": "#FFFFFF",
    "innerWindowColor": "#fff0f0",
    "bannerImageUrl": "https://imgur.com/2bHxjmx.jpg",
    "backgroundImageUrl": "https://imgur.com/o4ypypv.jpg",
    "endingTextColor": "#000000",
    "customQuote": "",
    "gameTitle": "The Starmergeddon"
}

//#startcode


corrr = '\n              <h2>The Starmergeddon</h2>\n            ';


nct_stuff.themes[nct_stuff.selectedTheme].coloring_title = "#e4003b";

nct_stuff.themes[nct_stuff.selectedTheme].coloring_window = "#fffafb";

document.getElementsByClassName("game_header")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_title;

$("#game_window")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_window;

$(".container")[0].style.backgroundColor = "#FFFFFF";

document.getElementById("header").src = "https://imgur.com/2bHxjmx.jpg";

document.body.background = "https://imgur.com/o4ypypv.jpg";

document.head.innerHTML += "<style>#results_container {color:#000000;} .inner_window_w_desc {background-color:#fff0f0!important;}</style>";

//#endcode
